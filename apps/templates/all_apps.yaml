{{- $currentScope := .}}
{{-   range $service, $settings := .Values.services -}}
# For charts that do no support 'global.enabled' use removed:true to stop them.
# But note that this will loose rollback history
# empty settings default to enable: true
{{- $settings := default (dict "enabled" true) $settings }}
{{- if ne $settings.removed true -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $service }}
  namespace: {{ $currentScope.Release.Namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ default $currentScope.Release.Namespace $currentScope.Values.project }}
  destination:
    namespace: {{ $currentScope.Values.destination.namespace }}
    name: {{ $currentScope.Values.destination.name }}
  source:
    repoURL: {{ default $currentScope.Values.source.repoURL $settings.repoURL }}
    path: services/{{ default $service $settings.folder }}
    chart: {{ default "" $settings.chart }}
    targetRevision: {{ default $currentScope.Values.source.targetRevision $settings.targetRevision }}
    helm:
      version: v3
      valueFiles:
        - ../beamline_values.yaml
        - values.yaml
{{ if $settings.values -}}
      values: |
{{ toYaml $settings.values | indent 8 }}
{{- end }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      # don't restart pods unless there has been a change
      - ApplyOutOfSyncOnly=true
      - RespectIgnoreDifferences=true

---
{{- end -}}
{{- end -}}