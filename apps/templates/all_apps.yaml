{{- $currentScope := .}}
{{-   range $service, $settings := .Values.services -}}
# allow for nil settings by making it an empty dict
{{- $settings := dict $settings }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $service }}
  namespace: {{ $currentScope.Release.Namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ default $currentScope.Release.Namespace $currentScope.Values.project }}
  destination:
    namespace: {{ $currentScope.Values.destination.namespace }}
    name: {{ $currentScope.Values.destination.name }}
  source:
    repoURL: {{ default $currentScope.Values.source.repoURL $settings.repoURL }}
    path: services/{{ default $settings.service $settings.folder }}
    chart: {{ default "" $settings.chart }}
    targetRevision: {{ default $currentScope.Values.source.targetRevision $settings.targetRevision }}
    helm:
      parameters:
        - name: ioc-instance.enabled
          value: {{ ternary true false (ne $settings.enabled false) | quote }}
        {{-  range $k, $v := $settings.values }}
        - name: {{ $k }}
          value: {{ $v | quote }}
        {{- end }}
      version: v3
      valueFiles:
        - ../beamline_values.yaml
        - values.yaml

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      # don't restart pods unless there has been a change
      - ApplyOutOfSyncOnly=true
      - RespectIgnoreDifferences=true

  # allow ec to start/stop services without sync undoing that
  # I think we prefer use of 'enabled' as an override
  # ignoreDifferences:
  # - group: apps
  #   kind: Deployment
  #   jsonPointers:
  #   - /spec/replicas
  # - group: apps
  #   kind: StatefulSet
  #   jsonPointers:
  #   - /spec/replicas
---
{{- end -}}